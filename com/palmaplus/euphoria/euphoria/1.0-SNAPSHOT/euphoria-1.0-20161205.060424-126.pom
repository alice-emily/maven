<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.palmaplus.euphoria</groupId>
    <artifactId>euphoria</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>euphoria-core</module>
        <module>euphoria-servlet</module>
        <module>euphoria-rest</module>
        <module>euphoria-jpa</module>
        <module>euphoria-jta</module>
        <module>euphoria-grpc</module>
        <module>euphoria-infinispan</module>
        <module>euphoria-mail</module>
        <module>euphoria-zookeeper</module>
    </modules>
    <packaging>pom</packaging>

    <description>
        Euphoria
        Requires Druid (Balance)
        Requires level 100
        You feel a deeper connection to the stars, reducing your Balance Energy cycle time by 50%. Additionally, your
        Lunar and Solar Empowerments also reduce the cast time of the affected spells by 20%.

        See: http://www.wowhead.com/spell=152222/euphoria
    </description>

    <developers>
        <developer>
            <name>Yongxian Wu</name>
            <email>yongxian.wu@palmaplus.com</email>
            <organization>Palmap+</organization>
            <organizationUrl>http://www.palmap.cn</organizationUrl>
        </developer>
        <developer>
            <name>Pin Liu</name>
            <email>pin.liu@palmaplus.com</email>
            <organization>Palmap+</organization>
            <organizationUrl>http://www.palmap.cn</organizationUrl>
        </developer>
    </developers>

    <scm>
        <url>http://stash.palmap.cn/scm/eup/euphoria.git</url>
    </scm>

    <properties>
        <java.version>1.8</java.version>
        <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <euphoria.version>1.0-SNAPSHOT</euphoria.version>

        <arquillian.version>1.1.11.Final</arquillian.version>
        <assertj.version>3.4.1</assertj.version>
        <cglib.version>3.2.4</cglib.version>
        <commons-codec.version>1.10</commons-codec.version>
        <commons-dbutils.version>1.6</commons-dbutils.version>
        <commons-email.version>1.4</commons-email.version>
        <commons-io.version>2.5</commons-io.version>
        <commons-lang.version>2.6</commons-lang.version>
        <curator.version>2.11.0</curator.version>
        <deltaspike.version>1.7.1</deltaspike.version>
        <druid.version>1.0.26</druid.version>
        <geotools.version>16.0</geotools.version>
        <grpc.version>1.0.1</grpc.version>
        <guava.version>20.0</guava.version>
        <h2.version>1.4.192</h2.version>
        <hibernate.version>5.2.5.Final</hibernate.version>
        <infinispan.version>8.2.4.Final</infinispan.version>
        <jackson.version>2.8.4</jackson.version>
        <jboss.version>7.5.0.Final</jboss.version>
        <jts.version>1.13</jts.version>
        <junit.version>4.12</junit.version>
        <lombok.version>1.16.10</lombok.version>
        <log4j.version>2.7</log4j.version>
        <mockito.version>1.10.19</mockito.version>
        <narayana.version>5.4.0.Final</narayana.version>
        <netty.version>4.1.5.Final</netty.version>
        <protobuf.version>3.0.0</protobuf.version>
        <protostuff.version>1.4.4</protostuff.version>
        <resteasy.version>3.0.19.Final</resteasy.version>
        <shrinkwrap.version>1.2.6</shrinkwrap.version>
        <testng.version>6.9.9</testng.version>
        <undertow.version>1.4.4.Final</undertow.version>
        <weld.version>2.4.0.Final</weld.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- euphoria sub modules -->
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-core</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-grpc</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-infinispan</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-jpa</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-jta</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-mail</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-rest</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-servlet</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-zookeeper</artifactId>
                <version>${euphoria.version}</version>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.16.10</version>
                <scope>provided</scope>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-1.2-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jul</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- apache commons -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-dbutils</groupId>
                <artifactId>commons-dbutils</artifactId>
                <version>${commons-dbutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-email</artifactId>
                <version>${commons-email.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>

            <!-- cglib -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglib.version}</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>de.grundid.opendatalab</groupId>
                <artifactId>geojson-jackson</artifactId>
                <version>1.5.1</version>
            </dependency>
            <dependency>
                <groupId>com.bedatadriven</groupId>
                <artifactId>jackson-datatype-jts</artifactId>
                <version>2.3</version>
            </dependency>

            <!-- JTS  -->
            <dependency>
                <groupId>com.vividsolutions</groupId>
                <artifactId>jts</artifactId>
                <version>${jts.version}</version>
            </dependency>

            <!-- GeoTools -->
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-jts-wrapper</artifactId>
                <version>${geotools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-epsg-wkt</artifactId>
                <version>${geotools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-shapefile</artifactId>
                <version>${geotools.version}</version>
            </dependency>

            <!-- curator -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- database -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>

            <!-- JPA -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-ehcache</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-spatial</artifactId>
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${hibernate.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- JTA -->
            <dependency>
                <groupId>org.jboss.narayana.jta</groupId>
                <artifactId>narayana-jta</artifactId>
                <version>${narayana.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-transaction-spi</artifactId>
                <version>${jboss.version}</version>
            </dependency>

            <!-- ProtoBuf -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>

            <!-- gRPC -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${grpc.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-codec-http2</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <!-- Netty -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http2</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <!-- resteasy -->
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxrs</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>async-http-servlet-3.0</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-cdi</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-cache-core</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson2-provider</artifactId>
                <version>${resteasy.version}</version>
            </dependency>

            <!-- infinispan -->
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-core</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cdi-embedded</artifactId>
                <version>${infinispan.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.infinispan</groupId>
                        <artifactId>infinispan-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-leveldb</artifactId>
                <version>${infinispan.version}</version>
            </dependency>

            <!-- Weld -->
            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-core</artifactId>
                <version>${weld.version}</version>
            </dependency>

            <!-- Undertow -->
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-servlet</artifactId>
                <version>${undertow.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Euphoria-Build-Version>${project.version}</Euphoria-Build-Version>
                            <Euphoria-Build-Date>${maven.build.timestamp}</Euphoria-Build-Date>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <attach>true</attach>
                </configuration>
            </plugin>
            <plugin>
                <!-- explicitly define maven-deploy-plugin after other to force exec order -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                maven version manage  http://mojo.codehaus.org/versions-maven-plugin/

                很多Maven用户遇到过这样一个问题，当项目包含大量模块的时候，为他们集体更新版本就变成一件烦人的事情，到底有没有自动化工具能帮助
                完成这件 事情呢？（当然你可以使用sed之类的文本操作工具，不过不在本文讨论范围）答案是肯定的，versions-maven-plugin提供了
                很多目标帮助你管理Maven项目的各种版本信息。例如最常用的，命令 mvn versions:set -D newVersion=1.1-SNAPSHOT 就能帮助你
                把所有模块的版本更新到1.1-SNAPSHOT。该插件还提供了其他一些很有用的目标，display-dependency-updates能告诉你项目依赖有
                哪些可用的更新；类似的display-plugin-updates能告诉你可用的插件更新；然后use-latest-versions能自动帮你将所有依赖升级
                到最新版本。最后，如果你对所做的更改满意，则可以使用 mvn versions:commit 提交，不满意的话也可以使用 mvn versions:revert
                进行撤销。
             -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.3</version>
            </plugin>

            <!--
                http://maven.apache.org/plugins/maven-help-plugin/

                maven-help-plugin是一个小巧的辅助工具，最简单的help:system可以打印所有可用的环境变量和Java系统属性。
                help:effective-pom和help:effective-settings最 为有用，它们分别打印项目的有效POM和有效settings，有效POM是指合并了
                所有父POM（包括Super POM）后的XML，当你不确定POM的某些信息从何而来时，就可以查看有效POM。有效settings同理，特别是当你发
                现自己配置的 settings.xml没有生效时，就可以用help:effective-settings来验证。此外，maven-help-plugin的describe目
                标可以帮助你描述任何一个Maven插件的信息，还有all-profiles目标和active-profiles目标帮助查看项目的Profile。
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>2.2</version>
            </plugin>
        </plugins>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.4.1.Final</version>
            </extension>
        </extensions>
    </build>

    <distributionManagement>
        <repository>
            <id>palmap+</id>
            <url>http://nexus.palmap.cn/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>palmap+</id>
            <url>http://nexus.palmap.cn/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>palmap+</id>
            <url>http://nexus.palmap.cn/nexus/content/groups/public/</url>
            <releases>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
        </repository>
        <repository>
            <id>jcenter</id>
            <url>https://jcenter.bintray.com</url>
        </repository>
        <repository>
            <id>central</id>
            <url>http://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>osgeo</id>
            <url>http://download.osgeo.org/webdav/geotools/</url>
        </repository>
        <repository>
            <id>boundless</id>
            <url>http://repo.boundlessgeo.com/main</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>grpc</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>${basedir}/src/main/resources/protos</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.xolstice.maven.plugins</groupId>
                        <artifactId>protobuf-maven-plugin</artifactId>
                        <version>0.5.0</version>
                        <configuration>
                            <!--
                              The version of protoc must match protobuf-java. If you don't depend on
                              protobuf-java directly, you will be transitively depending on the
                              protobuf-java version that grpc depends on.
                            -->
                            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                            <pluginId>grpc-java</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                            <protoSourceRoot>${project.basedir}/src/main/resources/protos</protoSourceRoot>
                            <outputDirectory>${project.basedir}/target/generated-sources/java</outputDirectory>
                            <clearOutputDirectory>false</clearOutputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>compile-custom</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>wrapper</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>${basedir}/src/main/resources/META-INF/euphoria.txt</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <version>1.10</version>
                        <configuration>
                            <configurationDirectory>conf</configurationDirectory>
                            <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
                            <copyConfigurationDirectory>false</copyConfigurationDirectory>
                            <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
                            <useWildcardClassPath>true</useWildcardClassPath>
                            <useDaemonIdAsWrapperConfName>true</useDaemonIdAsWrapperConfName>
                            <repositoryLayout>flat</repositoryLayout>
                            <repositoryName>lib</repositoryName>
                            <binFileExtensions>
                                <windows>.bat</windows>
                            </binFileExtensions>
                            <logsDirectory>logs</logsDirectory>
                            <daemons>
                                <daemon>
                                    <id>${wrapper.daemon.id}</id>
                                    <platforms>
                                        <platform>jsw</platform>
                                    </platforms>
                                    <mainClass>${wrapper.main.class}</mainClass>
                                    <jvmSettings>
                                        <extraArguments>
                                            <!-- heap and gc -->
                                            <extraArgument>-Xms2g</extraArgument>
                                            <extraArgument>-Xmx8g</extraArgument>
                                            <extraArgument>-XX:ReservedCodeCacheSize=240m</extraArgument>
                                            <extraArgument>-XX:+UseConcMarkSweepGC</extraArgument>
                                            <extraArgument>-XX:SoftRefLRUPolicyMSPerMB=50</extraArgument>
                                            <extraArgument>-ea</extraArgument>
                                            <extraArgument>-Dsun.io.useCanonCaches=false</extraArgument>
                                            <extraArgument>-Djava.net.preferIPv4Stack=true</extraArgument>
                                            <!-- jmx remote -->
                                            <!--
                                            <extraArgument>-Dcom.sun.management.jmxremote</extraArgument>
                                            <extraArgument>-Dcom.sun.management.jmxremote.ssl=false</extraArgument>
                                            <extraArgument>-Dcom.sun.management.jmxremote.authenticate=false</extraArgument>
                                            <extraArgument>-Dcom.sun.management.jmxremote.port=1098</extraArgument>
                                            -->
                                            <!-- remote debug -->
                                            <!--
                                            <extraArgument>-Xdebug</extraArgument>
                                            <extraArgument>-Xrunjdwp:transport=dt_socket,address=8001,server=y,suspend=y</extraArgument>
                                            -->
                                        </extraArguments>
                                    </jvmSettings>
                                    <generatorConfigurations>
                                        <generatorConfiguration>
                                            <generator>jsw</generator>
                                            <includes>
                                                <include>linux-x86-64</include>
                                                <include>windows-x86-64</include>
                                                <include>macosx-universal-64</include>
                                            </includes>
                                            <configuration>
                                                <property>
                                                    <name>configuration.directory.in.classpath.first</name>
                                                    <value>conf</value>
                                                </property>
                                                <property>
                                                    <name>set.default.REPO_DIR</name>
                                                    <value>lib</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.console.format</name>
                                                    <value>PM</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile</name>
                                                    <value>logs/${wrapper.daemon.id}.log</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.format</name>
                                                    <value>PM</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.maxsize</name>
                                                    <value>10m</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.maxfiles</name>
                                                    <value>5</value>
                                                </property>
                                            </configuration>
                                        </generatorConfiguration>
                                    </generatorConfigurations>
                                </daemon>
                            </daemons>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-deploy-dir</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>generate-daemons</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.6</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.palmaplus.euphoria</groupId>
                                <artifactId>euphoria-core</artifactId>
                                <version>${euphoria.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <finalName>${wrapper.daemon.id}-${maven.build.timestamp}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <descriptorRefs>
                                <descriptorRef>wrapper-assembly</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>