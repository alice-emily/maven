<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>euphoria</artifactId>
        <groupId>com.palmaplus.euphoria</groupId>
        <version>2.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>euphoria-parent</artifactId>
    <packaging>pom</packaging>
    <name>Euphoria :: Parent</name>
    <description>
        The euphoria parent module provides the dependencies plugins and profile managements
    </description>

    <properties>
        <!-- Project settings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!-- Euphoria version-->
        <euphoria.version>2.0-SNAPSHOT</euphoria.version>

        <!-- Dependencies version manage -->
        <assertj.version>3.6.1</assertj.version>
        <beetl.version>2.7.11</beetl.version>
        <bouncycastle.version>1.56</bouncycastle.version>
        <camel.version>2.18.1</camel.version>
        <checkstyle.version>7.3</checkstyle.version>
        <classmate.version>1.3.3</classmate.version>
        <curator.version>2.11.0</curator.version>
        <druid.version>1.0.28</druid.version>
        <ehcache.version>2.10.3</ehcache.version>
        <elasticsearch.version>2.4.3</elasticsearch.version>
        <errorprone.version>2.0.15</errorprone.version>
        <geojson.jackson.version>1.6</geojson.jackson.version>
        <geotools.version>16.1</geotools.version>
        <grpc.version>1.1.2</grpc.version>
        <guava.version>20.0</guava.version>
        <h2gis.version>1.3.0</h2gis.version>
        <hibernate.version>5.2.6.Final</hibernate.version>
        <hibernate.hql.version>1.3.0.Final</hibernate.hql.version>
        <hibernate.search.version>5.6.0.Beta1</hibernate.search.version> <!-- wait for infinispan upgrade -->
        <infinispan.version>8.2.5.Final</infinispan.version>
        <jackson.version>2.8.6</jackson.version>
        <jackson.datatype.jts.version>2.3</jackson.datatype.jts.version>
        <jansi.version>1.14</jansi.version>
        <javax.el.version>3.0.0</javax.el.version>
        <jboss.logging.version>3.3.0.Final</jboss.logging.version>
        <jline.version>3.1.2</jline.version>
        <jna.version>4.2.2</jna.version>
        <joda.time.version>2.9.7</joda.time.version>
        <jodd.version>3.8.1</jodd.version>
        <jsr305.version>3.0.0</jsr305.version>
        <jts.version>1.13</jts.version>
        <junit.version>4.12</junit.version>
        <kafka.version>0.9.0.1</kafka.version>   <!-- compatible with cdh -->
        <lombok.version>1.16.14</lombok.version>
        <log4j.version>2.7</log4j.version>
        <lucene.version>5.5.2</lucene.version>   <!-- used by hibernate search and elasticsearch, must be compatible -->
        <metrics.version>3.1.2</metrics.version>
        <metrics.spring.version>3.1.3</metrics.spring.version>
        <msgpack.version>0.6.12</msgpack.version>
        <netty.version>3.10.6.Final</netty.version>
        <netty4.version>4.1.8.Final</netty4.version>
        <protobuf.version>3.2.0</protobuf.version>
        <reactor.version>3.0.5.RELEASE</reactor.version>
        <resteasy.version>3.1.0.Final</resteasy.version>
        <resteasy.springboot.version>2.2.2-RELEASE</resteasy.springboot.version>
        <slf4j.version>1.7.22</slf4j.version>
        <spring.boot.version>1.5.1.RELEASE</spring.boot.version>
        <springfox.version>2.6.1</springfox.version>
        <sshj.version>0.19.1</sshj.version>
        <undertow.version>1.4.8.Final</undertow.version>

        <!-- Maven plugin version manage -->
        <maven.assembly.plugin.version>2.6</maven.assembly.plugin.version>
        <maven.checkstyle.plugin.version>2.17</maven.checkstyle.plugin.version>
        <maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>
        <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
        <maven.help.plugin.version>2.2</maven.help.plugin.version>
        <maven.jar.plugin.version>3.0.2</maven.jar.plugin.version>
        <maven.shade.plugin.version>2.4.3</maven.shade.plugin.version>
        <maven.source.plugin.version>2.4</maven.source.plugin.version>

        <maven.appassembler.plugin.version>1.10</maven.appassembler.plugin.version>
        <maven.os.plugin.version>1.4.1.Final</maven.os.plugin.version>
        <maven.protobuf.plugin.version>0.5.0</maven.protobuf.plugin.version>
        <maven.versions.plugin.version>2.3</maven.versions.plugin.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <!-- euphoria sub modules -->
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-assets</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-core</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-cache</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-cmd</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-grpc</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-geo</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-jpa</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-jta</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-camel</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-rest</artifactId>
                <version>${euphoria.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palmaplus.euphoria</groupId>
                <artifactId>euphoria-swagger</artifactId>
                <version>${euphoria.version}</version>
            </dependency>

            <!-- other dependencies -->
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.ibeetl</groupId>
                <artifactId>beetl</artifactId>
                <version>${beetl.version}</version>
            </dependency>

            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>

            <!-- Apache Camel -->
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-boot-starter</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-rx</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-netty4</artifactId>
                <version>${camel.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-netty4-http</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-sjms</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-mqtt</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-ahc</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-ahc-ws</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-kafka</artifactId>
                <version>${camel.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.kafka</groupId>
                        <artifactId>kafka-clients</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.fasterxml</groupId>
                <artifactId>classmate</artifactId>
                <version>${classmate.version}</version>
            </dependency>

            <!-- apache commons -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.10</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>1.12</version>
            </dependency>
            <dependency>
                <groupId>commons-dbutils</groupId>
                <artifactId>commons-dbutils</artifactId>
                <version>1.6</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-email</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.5</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.5</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>3.5</version>
            </dependency>
            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>1.6</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-client</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>${ehcache.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.plugin</groupId>
                <artifactId>delete-by-query</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>de.grundid.opendatalab</groupId>
                <artifactId>geojson-jackson</artifactId>
                <version>${geojson.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-jts-wrapper</artifactId>
                <version>${geotools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-epsg-wkt</artifactId>
                <version>${geotools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-shapefile</artifactId>
                <version>${geotools.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.orbisgis</groupId>
                <artifactId>h2gis-functions</artifactId>
                <version>${h2gis.version}</version>
            </dependency>

            <!-- Hibernate Search -->
            <dependency>
                <groupId>org.hibernate.hql</groupId>
                <artifactId>hibernate-hql-lucene</artifactId>
                <version>${hibernate.hql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.hql</groupId>
                <artifactId>hibernate-hql-parser</artifactId>
                <version>${hibernate.hql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${hibernate.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-search-engine</artifactId>
                <version>${hibernate.search.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-search-serialization-avro</artifactId>
                <version>${hibernate.search.version}</version>
            </dependency>

            <!-- Hibernate Spatial -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-spatial</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-core</artifactId>
                <version>${infinispan.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.spec.javax.transaction</groupId>
                        <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-spring</artifactId>
                <version>${infinispan.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>log4j-jcl</artifactId>
                        <groupId>org.apache.logging.log4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-query</artifactId>
                <version>${infinispan.version}</version>
            </dependency>


            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.bedatadriven</groupId>
                <artifactId>jackson-datatype-jts</artifactId>
                <version>${jackson.datatype.jts.version}</version>
            </dependency>

            <dependency>
                <groupId>org.fusesource.jansi</groupId>
                <artifactId>jansi</artifactId>
                <version>${jansi.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${jboss.logging.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jline</groupId>
                <artifactId>jline</artifactId>
                <version>${jline.version}</version>
            </dependency>

            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>${jna.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.time.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jodd</groupId>
                <artifactId>jodd-bom</artifactId>
                <version>${jodd.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>

            <dependency>
                <groupId>com.vividsolutions</groupId>
                <artifactId>jts</artifactId>
                <version>${jts.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-common</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-backward-codecs</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-facet</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-misc</artifactId>
                <version>${lucene.version}</version>
            </dependency>

            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-annotation</artifactId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-healthchecks</artifactId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jvm</artifactId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-servlet</artifactId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-servlets</artifactId>
                <version>${metrics.version}</version>
            </dependency>

            <dependency>
                <groupId>com.ryantenney.metrics</groupId>
                <artifactId>metrics-spring</artifactId>
                <version>${metrics.spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.msgpack</groupId>
                <artifactId>msgpack</artifactId>
                <version>${msgpack.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http2</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <classifier>linux-x86_64</classifier>
                <version>${netty4.version}</version>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>

            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-core</artifactId>
                <version>${reactor.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-cache-core</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson2-provider</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxrs</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-spring</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-jettison-provider</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-servlet-initializer</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-validator-provider-11</artifactId>
                <version>${resteasy.version}</version>
            </dependency>

            <dependency>
                <groupId>com.paypal.springboot</groupId>
                <artifactId>resteasy-spring-boot-starter</artifactId>
                <version>${resteasy.springboot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>async-http-servlet-3.0</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hierynomus</groupId>
                <artifactId>sshj</artifactId>
                <version>${sshj.version}</version>
            </dependency>

            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-servlet</artifactId>
                <version>${undertow.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jodd</groupId>
            <artifactId>jodd-bean</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Javac Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <compilerArgument>-parameters</compilerArgument>
                    <testCompilerArgument>-parameters</testCompilerArgument>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Jar with euphoria build manifest entries -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Implementation-Build>${maven.build.timestamp}</Implementation-Build>
                            <Implementation-Title>${project.artifactId}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <attach>true</attach>
                </configuration>
            </plugin>
            <plugin>
                <!-- explicitly define maven-deploy-plugin after other to force exec order -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven.deploy.plugin.version}</version>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                - Make a checkstyle violation a compile error. Note that if a compile error occurs,
                - further information can be found in target/site/checkstyle.html (present even when
                - just the compile goal and not the site goal has been run). Note also that child
                - projects may redeclare this plugin and provide different configuration settings
                - to use different checks (more or less strict than the default).
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin.version}</version>
                <configuration>
                    <configLocation>checkstyle/default-checks.xml</configLocation>
                    <headerLocation>checkstyle/asf-header.txt</headerLocation>
                    <consoleOutput>true</consoleOutput>
                </configuration>
                <executions>
                    <execution>
                        <id>verify-style</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.palmaplus.euphoria</groupId>
                        <artifactId>euphoria-assets</artifactId>
                        <version>${euphoria.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--
                maven version manage  http://mojo.codehaus.org/versions-maven-plugin/

                很多Maven用户遇到过这样一个问题，当项目包含大量模块的时候，为他们集体更新版本就变成一件烦人的事情，到底有没有自动化工具能帮助
                完成这件 事情呢？（当然你可以使用sed之类的文本操作工具，不过不在本文讨论范围）答案是肯定的，versions-maven-plugin提供了
                很多目标帮助你管理Maven项目的各种版本信息。例如最常用的，命令 mvn versions:set -D newVersion=1.1-SNAPSHOT 就能帮助你
                把所有模块的版本更新到1.1-SNAPSHOT。该插件还提供了其他一些很有用的目标，display-dependency-updates能告诉你项目依赖有
                哪些可用的更新；类似的display-plugin-updates能告诉你可用的插件更新；然后use-latest-versions能自动帮你将所有依赖升级
                到最新版本。最后，如果你对所做的更改满意，则可以使用 mvn versions:commit 提交，不满意的话也可以使用 mvn versions:revert
                进行撤销。
             -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${maven.versions.plugin.version}</version>
            </plugin>

            <!--
                http://maven.apache.org/plugins/maven-help-plugin/

                maven-help-plugin是一个小巧的辅助工具，最简单的help:system可以打印所有可用的环境变量和Java系统属性。
                help:effective-pom和help:effective-settings最 为有用，它们分别打印项目的有效POM和有效settings，有效POM是指合并了
                所有父POM（包括Super POM）后的XML，当你不确定POM的某些信息从何而来时，就可以查看有效POM。有效settings同理，特别是当你发
                现自己配置的 settings.xml没有生效时，就可以用help:effective-settings来验证。此外，maven-help-plugin的describe目
                标可以帮助你描述任何一个Maven插件的信息，还有all-profiles目标和active-profiles目标帮助查看项目的Profile。
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>${maven.help.plugin.version}</version>
            </plugin>
        </plugins>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${maven.os.plugin.version}</version>
            </extension>
        </extensions>
    </build>

    <profiles>
        <profile>
            <id>gRPC</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>${basedir}/src/main/resources/protos</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.xolstice.maven.plugins</groupId>
                        <artifactId>protobuf-maven-plugin</artifactId>
                        <version>${maven.protobuf.plugin.version}</version>
                        <configuration>
                            <!--
                              The version of protoc must match protobuf-java. If you don't depend on
                              protobuf-java directly, you will be transitively depending on the
                              protobuf-java version that grpc depends on.
                            -->
                            <protocArtifact>
                                com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                            </protocArtifact>
                            <pluginId>grpc-java</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                            </pluginArtifact>
                            <protoSourceRoot>${project.basedir}/src/main/resources/protos</protoSourceRoot>
                            <outputDirectory>${project.basedir}/target/generated-sources/java</outputDirectory>
                            <clearOutputDirectory>false</clearOutputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>compile-custom</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>uber</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>${basedir}/src/main/resources/META-INF/euphoria-uber.txt</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring.boot.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>wrapper</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>${basedir}/src/main/resources/META-INF/euphoria-wrapper.txt</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <version>${maven.appassembler.plugin.version}</version>
                        <configuration>
                            <configurationDirectory>conf</configurationDirectory>
                            <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
                            <copyConfigurationDirectory>false</copyConfigurationDirectory>
                            <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
                            <useWildcardClassPath>true</useWildcardClassPath>
                            <useDaemonIdAsWrapperConfName>true</useDaemonIdAsWrapperConfName>
                            <repositoryLayout>flat</repositoryLayout>
                            <repositoryName>lib</repositoryName>
                            <binFileExtensions>
                                <windows>.bat</windows>
                            </binFileExtensions>
                            <logsDirectory>logs</logsDirectory>
                            <daemons>
                                <daemon>
                                    <id>${wrapper.daemon.id}</id>
                                    <platforms>
                                        <platform>jsw</platform>
                                    </platforms>
                                    <mainClass>${wrapper.main.class}</mainClass>
                                    <jvmSettings>
                                        <extraArguments>
                                            <!-- heap and gc -->
                                            <extraArgument>-Xms2g</extraArgument>
                                            <extraArgument>-Xmx8g</extraArgument>
                                            <extraArgument>-XX:ReservedCodeCacheSize=240m</extraArgument>
                                            <extraArgument>-XX:SoftRefLRUPolicyMSPerMB=50</extraArgument>
                                            <extraArgument>-ea</extraArgument>
                                            <extraArgument>-Dsun.io.useCanonCaches=false</extraArgument>
                                            <extraArgument>-Djava.net.preferIPv4Stack=true</extraArgument>
                                            <!-- jmx remote -->
                                            <!--
                                            <extraArgument>-Dcom.sun.management.jmxremote</extraArgument>
                                            <extraArgument>-Dcom.sun.management.jmxremote.ssl=false</extraArgument>
                                            <extraArgument>-Dcom.sun.management.jmxremote.authenticate=false</extraArgument>
                                            <extraArgument>-Dcom.sun.management.jmxremote.port=1098</extraArgument>
                                            -->
                                            <!-- remote debug -->
                                            <!--
                                            <extraArgument>-Xdebug</extraArgument>
                                            <extraArgument>-Xrunjdwp:transport=dt_socket,address=8001,server=y,suspend=y</extraArgument>
                                            -->
                                        </extraArguments>
                                    </jvmSettings>
                                    <generatorConfigurations>
                                        <generatorConfiguration>
                                            <generator>jsw</generator>
                                            <includes>
                                                <include>linux-x86-64</include>
                                                <include>windows-x86-64</include>
                                                <include>macosx-universal-64</include>
                                            </includes>
                                            <configuration>
                                                <property>
                                                    <name>configuration.directory.in.classpath.first</name>
                                                    <value>conf</value>
                                                </property>
                                                <property>
                                                    <name>set.default.REPO_DIR</name>
                                                    <value>lib</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.console.format</name>
                                                    <value>M</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile</name>
                                                    <value>logs/${wrapper.daemon.id}.log</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.format</name>
                                                    <value>M</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.maxsize</name>
                                                    <value>10m</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.maxfiles</name>
                                                    <value>5</value>
                                                </property>
                                            </configuration>
                                        </generatorConfiguration>
                                    </generatorConfigurations>
                                </daemon>
                            </daemons>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-deploy-dir</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>generate-daemons</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven.assembly.plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.palmaplus.euphoria</groupId>
                                <artifactId>euphoria-assets</artifactId>
                                <version>${euphoria.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <finalName>${wrapper.daemon.id}-${maven.build.timestamp}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <descriptorRefs>
                                <descriptorRef>wrapper-assembly</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
